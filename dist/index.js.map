{"version":3,"sources":["../src/index.js"],"names":["readAsync","__dirname","data","JSON","parse","console","log","name","init","readFile"],"mappings":";;;;;;;;;;AAIyC;;sFACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBA,UAAU,mBAAEC,SAAF,EAAY,iBAAZ,CAAV,CADnB;;AAAA;AACMC,gBADN;;AAEEA,mBAAOC,KAAKC,KAAL,CAAWF,IAAX,CAAP;AACAG,oBAAQC,GAAR,CAAYJ,KAAKK,IAAjB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,I;;;;;AALf;;AACA;;AACA;;;;;;AAEA,IAAMR,YAAY,qBAAU,aAAGS,QAAb,CAAlB;AAMAD","file":"index.js","sourcesContent":["import { promisify } from 'util'\nimport { resolve as r } from 'path'\nimport fs from 'fs'\n\nconst readAsync = promisify(fs.readFile) // Nodejs 8 有一个新的工具函数util.promisify() 他将一个接收回调函数参数的函数转换成一个返回Promise的函数。\nasync function init() {\n  let data = await readAsync(r(__dirname,'../package.json'))\n  data = JSON.parse(data)\n  console.log(data.name)\n}\ninit()\n"]}